# Note that the order of these two plays is important. We want the second one
# to run to be the one the creates the correct log path for the currently
# running system.
- name: Test the emit-job-header role without swift
  hosts: all
  roles:
    - role: emit-job-header
      zuul_log_url: "http://logs.openstack.org"
  post_tasks:
    # All emit-job-header does is a debug statement so the worst that would
    # happen would be that the debug task would fail outright and we'd prevent
    # something breaking that debug statement from merging just by running it.
    # However, the emit-job-header role includes the set-zuul-log-path-fact
    # role. We can only test for zuul_log_path against changes, though.
    - name: Assert zuul_log_path by set-zuul-log-path-fact for a change
      assert:
        that:
          - zuul_log_path is defined
          - zuul.change in zuul_log_path
          - zuul.patchset in zuul_log_path
          - zuul.pipeline in zuul_log_path
          - zuul.job in zuul_log_path
          - zuul.build[:3] != zuul_log_path[:3]

- name: Test the emit-job-header role with swift
  hosts: all
  roles:
    - role: emit-job-header
      zuul_log_url: "http://logs.openstack.org"
      zuul_log_path_shard_build: true
  post_tasks:
    # All emit-job-header does is a debug statement so the worst that would
    # happen would be that the debug task would fail outright and we'd prevent
    # something breaking that debug statement from merging just by running it.
    # However, the emit-job-header role includes the set-zuul-log-path-fact
    # role. We can only test for zuul_log_path against changes, though.
    - name: Assert zuul_log_path by set-zuul-log-path-fact for a change
      assert:
        that:
          - zuul_log_path is defined
          - zuul.change in zuul_log_path
          - zuul.patchset in zuul_log_path
          - zuul.pipeline in zuul_log_path
          - zuul.job in zuul_log_path
          - zuul.build[:3] == zuul_log_path[:3]
